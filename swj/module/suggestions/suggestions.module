<?php
function suggestions_form_alter(&$form, &$form_state, $form_id) {
  // Add validation for a particular Webform node:
  if ($form_id == 'webform_client_form_11675') {
     
    // Simply add the additional validate handler.
    $form['#validate'][] = 'suggestions_webform_validate_11675';  
  }
  if ($form_id == 'webform_client_form_11730') {
     
    // Simply add the additional validate handler.
    $form['#validate'][] = 'suggestions_webform_validate_11730';  
  }
  if ($form_id == 'webform_client_form_11731') {
     
    // Simply add the additional validate handler.
    $form['#validate'][] = 'suggestions_webform_validate_11731';  
  }
}
function suggestions_block($op = 'list', $delta = 0) {
 $blocks = array();
 switch ($op) {
   case 'list':
    $blocks[0]['info'] = t('Suggest News Block');
    $blocks[1]['info'] = t('Suggest Library Block');
   break;
   case 'view':
     switch ($delta) {
	   case 0:
	    $blocks['content'] = suggestions_news_block();
	  break;
	  case 1:
	    $blocks['content'] = suggestions_library_block();
	  break;
	 }
 }
 return $blocks;
}

function suggestions_webform_validate_11675(&$form, $form_state) {
  $values = $form_state['values'];
  if ( empty($values['submitted']['verify']['true']) || empty($values['submitted']['review']['true'])) {
    form_set_error('submitted][verify', t('Please read and verify the statements below by checking the box.'));
  }

}

function suggestions_webform_validate_11730(&$form, $form_state) {
  $values = $form_state['values'];
  if ( empty($values['submitted']['verify']['true']) || empty($values['submitted']['review']['true'])) {
    form_set_error('submitted][verify', t('Please read and verify the statements below by checking the box.'));
  }

}

function suggestions_webform_validate_11731(&$form, $form_state) {
  $values = $form_state['values'];
  if ( empty($values['submitted']['verify']['true']) || empty($values['submitted']['review']['true'])) {
    form_set_error('submitted][verify', t('Please read and verify the statements below by checking the box.'));
  }

}

 function suggestions_news_block() {
  $dest = suggestions_get_destination_alias();
  
  $out = "<ul>";
   $out .= "<li>".l(t("News Item"), 'suggestions/news-item-suggestion');
   $out .= "<li>".l(t("Tag Change"), 'suggestions/tag-change',array('query'=>$dest));
   $out .= "<li>".l(t("Something Else"), 'suggestions/something-else',array('query'=>$dest));
  $out .= "</ul>";
  return theme("suggestion_block", $out);
 }
 
 function suggestions_library_block() {
  $dest = suggestions_get_destination_alias();
  
  $out = "<ul>";
   $out .= "<li>".l(t("Library Addition"), 'suggestions/library-addition');
   $out .= "<li>".l(t("Tag Change"), 'suggestions/library-tag-change',array('query'=>$dest));
   $out .= "<li>".l(t("Something Else"), 'suggestions/something-else',array('query'=>$dest));
  $out .= "</ul>";
  return theme("suggestion_block", $out);
 }

 function suggestions_theme() {
   return array(
     'suggestion_block'=>array(
         'template'=>'suggestions-block',
         'arguments'=>array('out'=>NULL),
      ),
   );
 }

function suggestions_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  global $user;
  if ($op == 'view' && $node->type == 'webform' && !drupal_is_front_page()) {
    if ($user->uid == 0 ) { 
      drupal_goto('user', drupal_get_destination());
    }
  }
}

function suggestions_get_destination_alias() {
  if (isset($_REQUEST['destination'])) {
    return 'destination='. urlencode(drupal_get_path_alias($_REQUEST['destination']));
  }
  else {
    // Use $_GET here to retrieve the original path in source form.
    $path = isset($_GET['q']) ? $_GET['q'] : '';
    $query = drupal_query_string_encode($_GET, array('q'));
    if ($query != '') {
      $path .= '?'. $query;
    }
    return 'destination='. urlencode(drupal_get_path_alias($path));
  }
}
