<?php

function break_trimmer_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  $now = 1312606790;
  switch ($op) {
    case 'presave':
	    if ($node->type == 'article' || $node->type == 'blog' && $node->created < $now) {
		  break_trimmer_trim($node);
		}
	break;
	case 'update':
	  if ($node->type == 'article' || $node->type == 'blog' && $node->created < $now) {
	    
	  }
	break;
  }
}

function break_trimmer_trim(&$node) {
  $node->body = preg_replace("/(<br\s*\/?>\s*)+/", '</p><p>', $node->body);
  $node->body = preg_replace('#<p[^>]*>(\s|&nbsp;?)*</p>#', '', $node->body);
  $node->teaser = '';
}

function break_trimmer_cron() {
  $now = 1312606790;
  $vars = unserialize(variable_get('break_trimmer'));
  $last_update = $vars['last_node'];
  $query = db_query("SELECT nid, title FROM {node} WHERE nid > %d AND (node.type in ('blog', 'article')) AND node.created < %d ORDER BY nid LIMIT 0, %d",  $last_update, $now, 10);
  while( $obj = db_fetch_object($query)) {
    $nid = array('nid'=> $obj->nid);
    $node = node_load($nid);
	$check =  preg_match("/(<br\s*\/?>\s*)+/", $node->body);
    if ($node->type == 'blog' || $node->type == 'article' && $node->created < $now && $check > 0) {
	  break_trimmer_trim($node);
	  content_presave($node);
      node_save($node);
      content_insert($node);
	}
	$last_update = $node->nid;
    unset($node);
    $var = array('last_node'=> $last_update, 'updated'=>time());
    $variable = serialize($var);
    variable_set('break_trimmer', $variable);
  }
  return true;
}