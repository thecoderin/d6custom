
<?php
include_once(drupal_get_path('module', 'doc_upload')."/inc/simple_html_dom.php");

function doc_upload_menu() {
  $items['doc-upload/blog'] = array(
    'title' => 'Upload Doc',
	'description' => 'Upload Document For creating a Blog',
    'page callback' => 'doc_upload_blog',
    'access arguments' => array('create blog entries'),  // ... has this permission.
    'type' => MENU_NORMAL_ITEM,
  );
  $items['doc-upload/article'] = array(
    'title' => 'Upload Doc',
	'description' => 'Upload Document For creating a Journal Article',
    'page callback' => 'doc_upload_article',
    'access arguments' => array('create article content'),  // ... has this permission.
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function doc_upload_blog() {
  return drupal_get_form('doc_upload_blog_form');
}

function doc_upload_article() {
  return drupal_get_form('doc_upload_article_form');
}

function doc_upload_blog_form() {
  $form = array();
  $form['#attributes'] = array('enctype' => "multipart/form-data");
  $form['doc_upload'] = array(
    '#type' => 'file',
	'#description' => t('Open your doc file in Word and Save As html, Upload the HTML file through file Uploader'),
    '#title' => t('UPLOAD FILE'),
    '#size' => 25,
  );
  $form ['submit'] = array (
			'#type' => 'submit', 
			'#value' => t ( 'Upload' ),
			'#name' => 'upload',
			'#submit' => array('doc_upload_blog_form_save'),
  );

  return $form;
}

function doc_upload_article_form() {
  $form = array();
  $form['#attributes'] = array('enctype' => "multipart/form-data");
  $form['doc_upload'] = array(
    '#type' => 'file',
	'#description' => t('Open your doc file in Word and Save As html, Upload the HTML file through file Uploader'),
    '#title' => t('UPLOAD FILE'),
    '#size' => 25,
  );
  $form ['submit'] = array (
			'#type' => 'submit', 
			'#value' => t ( 'Upload' ),
			'#name' => 'upload',
			'#submit' => array('doc_upload_article_form_save'),
  );

  return $form;
}

function doc_upload_blog_form_validate($form, &$form_state){
  $file = file_save_upload('doc_upload', array(
			'file_validate_extensions' => array('html htm'),
  ));
  if ($file) {
    $filepath = 'sites/default/files/doc-uploads';
    if (file_check_directory($filepath, FILE_CREATE_DIRECTORY)) {
      // Move the file, into the Drupal file system
      if (file_move($file, $filepath, FILE_EXISTS_RENAME)) {

        $form_state['storage']['doc_upload'] = $file->filepath;
      }
      else  {
        form_set_error('doc_upload', t("Failed to write the uploaded file the site's file folder.001"));
      }
    }
    else  {
      form_set_error('doc_upload', t("Failed to write the uploaded file the site's file folder.002"));
    }
  }
  else {
    form_set_error('doc_upload', t('No file was uploaded.'));
  }
}

function doc_upload_article_form_validate($form, &$form_state){
  $file = file_save_upload('doc_upload', array(
			'file_validate_extensions' => array('html htm'),
  ));
  if ($file) {
    $filepath = 'sites/default/files/doc-uploads';
    if (file_check_directory($filepath, FILE_CREATE_DIRECTORY)) {
      // Move the file, into the Drupal file system
      if (file_move($file, $filepath, FILE_EXISTS_RENAME)) {

        $form_state['storage']['doc_upload'] = $file->filepath;
      }
      else  {
        form_set_error('doc_upload', t("Failed to write the uploaded file the site's file folder.001"));
      }
    }
    else  {
      form_set_error('doc_upload', t("Failed to write the uploaded file the site's file folder.002"));
    }
  }
  else {
    form_set_error('doc_upload', t('No file was uploaded.'));
  }
}


function doc_upload_blog_form_save($form, &$form_state){
  global $base_url;
  $file = $base_url."/".$form_state['storage']['doc_upload'];
  $dom = file_get_html($file);
  $body = "";
  $rep = array('�', '�', '�', '�');
  $arr = array('"', '"', "'", '-');
  foreach ($dom->find('p, h1, h2, h3') as $text) {
    //print "<pre>";print_r($text);print "</pre>";
    switch($text->attr['class']) {
      case 'MsoTitle':
        $title = $text->plaintext;
        break;
      case 'MsoBodyText':
        $body .= "<p>".utf8_encode(str_replace($rep, $arr, $text->innertext))."</p>";
        break;

      case 'BulletedListCxSpFirst':
        $body .= "<ul>";
        $body .= "<li>".utf8_encode(str_replace($rep, $arr, $text->innertext))."</li>";
        break;

      case 'BulletedListCxSpMiddle':
        $body .= "<li>".utf8_encode(str_replace($rep, $arr, $text->innertext))."</li>";
        break;

      case 'BulletedListCxSpLast':
        $body .= "<li>".utf8_encode(str_replace($rep, $arr, $text->innertext))."</li>";
        $body .="</ul>";
        break;

      case 'SectionBreak':
        $body .= "<p class='section-break'>".utf8_encode(str_replace($rep, $arr, $text->innertext))."</p>";
        break;



      default:
        if ($text->tag == 'h1')
        $body .= "<h1>".utf8_encode(str_replace($rep, $arr, $text->plaintext))."</h1>";
        else if ($text->tag == 'h2')
        $body .= "<h2>".utf8_encode(str_replace($rep, $arr, $text->plaintext))."</h2>";
        else if ($text->tag == 'h3')
        $body .= "<h3>".utf8_encode(str_replace($rep, $arr, $text->plaintext))."</h3>";
        else $body .= utf8_encode(str_replace($rep, $arr, $text->innertext));
        break;
    }
  }
  print $title."<br/>".$body;
  //doc_upload_blog_create_node($title, $body);

}
function doc_upload_article_form_save($form, &$form_state){
  global $base_url;
  $file = $base_url."/".$form_state['storage']['doc_upload'];
  $dom = file_get_html($file);
  $body = "";
  $rep = array('�', '�', '�', '�');
  $arr = array('"', '"', "'", '-');
  foreach ($dom->find('p, h1') as $text) {

    switch($text->attr['class']) {
      case 'MsoTitle':
        $title = $text->plaintext;
        break;
      case 'MsoBodyText':
        $body .= "<p>".utf8_encode(str_replace($rep, $arr, $text->innertext))."</p>";
        break;
      case 'BulletedList':
        $previous = $text->prev_sibling();
        $next = $text->next_sibling();
        if ($previous->attr['class'] != 'BulletedList') {
          $body .= "<ul>";
        }
        $body .= "<li>".utf8_encode(str_replace($rep, $arr, $text->innertext))."</li>";
        if ($next->attr['class'] != 'BulletedList') {
          $body .= "</ul>";
        }
        break;
      default:
        if ($text->tag == 'h1')
        $body .= "<h1>".utf8_encode(str_replace($rep, $arr, $text->plaintext))."</h1>";
        break;
    }
  }
  doc_upload_article_create_node($title, $body);

}
function doc_upload_blog_create_node($title, $body) {

  global $user;
  $node = new StdClass();
  $node->type="blog";
  $node->uid = $user->uid;
  $node->title = $title;
  $node->body = $body;
  content_presave($node);
  node_save($node);
  content_insert($node);

  $uri = "node/".$node->nid."/edit";
  unset($node);
  drupal_goto($uri);
}
function doc_upload_article_create_node($title, $body) {

  global $user;
  $node = new StdClass();
  $node->type="blog";
  $node->uid = $user->uid;
  $node->title = $title;
  $node->body = $body;
  content_presave($node);
  node_save($node);
  content_insert($node);

  $uri = "node/".$node->nid."/edit";
  unset($node);
  drupal_goto($uri);
}