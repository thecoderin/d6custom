<?php

/**
* Implementation of hook_menu().
*/

function redirector_menu() {
  $items[redirect] = array(
	'title' => 'Redirect..',
	'description' => 'Please wait until site redirect into new URL.',
	'page callback' => 'redirector_new',
	'access arguments' => array('access content'),
	'type' => MENUCALLBACK,
		);
		
  return $items;
}

function redirector_new() {
  $url = '404';
  $arguments = arg();
  switch ($arguments[1]) {
	case 'blogArchive':
		$url = "blog/archive/".$arguments[2].$arguments[3];
		drupal_goto($url);
	break;
	case 'journalArchive':
		$url = "jrnl/iss/".$arguments[2].$arguments[3];
		drupal_goto($url);
	break;
	case 'check':
		$url = redirector_url_check($arguments[2], $arguments[3], $arguments[4]);
	break;
	case 'files':
	  $url = redirector_files($arguments);
	break;
  }
  drupal_goto($url);
}

function redirector_url_check($year, $month, $url_string) {
  global $base_url;
  $flag = false;
  $last = strrpos($url_string, '-');
  $check = str_replace("-", " ", $url_string);
  $link = array();
  $url_check = substr($url_string, 0, $last);
  $result = db_query("SELECT a.src as source FROM {url_alias} a WHERE dst like '%%%s%%' AND src like 'node%'", $url_check);
  while ($row = db_fetch_object($result)) {
	$link[] = $row->source;
  }
  if (count($link) == 1) {
    $flag = true;
	return $link[0];
  }
 /* elseif (count($link) > 1 ) {
    $first = firstOfMonth($year, $month);
	$last = firstOfMonth($year, $month + 1);
    foreach($link as $l) {
	  $slashpos = strrpos($l, "/");
	  $nid = substr($l, $slashpos +1);
	  $node = node_load($nid);
	  $title = stristr($node->title, $check);
	  if($node->created > $first && $node->created < $last && $title !==false) {
	    $flag = true;
	    return "node/".$nid;
	  }
	  else continue;
	}
  }*/
  if (!$flag) {
	return $base_url."/search/node/".$check;
  }
}


function redirector_files($arg = array()) {
    $check = array_shift($arg);
	 array_shift($arg);
	 $check2 = array_shift($arg);
  if ($check == 'files' && $check2 == 'default') {
	$url = implode('/', $arg);
  }
  else {
       
    $url = 'sites/default/files/swjoldfiles/'.implode('/', $arg);
  }
  return $url;
}

function SWJworkflow_timestamp($nid =0) {
	 if ($nid > 0 ) {
	  $node = node_load($nid);
	  if ($node->created > 1313384400 ) {
	   $check = db_query("SELECT sid FROM {workflow_node} WHERE nid=%d AND sid=5", $nid);
       if ($check->num_rows > 0) {	   
	     $res = db_query("SELECT stamp FROM {workflow_node_history} WHERE nid = %d AND sid = 5 ORDER by stamp LIMIT 0,1", $nid);
	     while( $out = db_fetch_object($res)){
	       $left = $out->stamp - $node->created - (60*60);
	       if ($left > 0 && !empty($out->stamp)) {
	        return $out->stamp;
		   }
		 }
		}
	  }
	}
  return false;
}

function SWJcontent_updates($nid = 0) {
  if ($nid > 0 && SWJcontent_revisions($nid) !== false) {
    $node = node_load($nid);
	
	$left = $node->revision_timestamp - $node->created - (60*60);
	//var_dump($left);
	if ($left > 0 ) {
	  return $node->revision_timestamp;
	}
  }
  return false;
}

function link2name($u_link) {
  $uname = str_replace("-", " ", $u_link);
  return ucwords($uname);
}

function SWJcontent_revisions($nid) {
  $check = db_query("SELECT timestamp FROM {node_revisions} WHERE nid=%d", $nid);
  if ($check->num_rows > 1) return true;
  else return false;
}